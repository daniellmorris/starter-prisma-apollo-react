import gql from "graphql-tag";
import { graphql } from "react-apollo";
import { compose, withHandlers } from "recompose";
import React from 'react';

const CREATE_POST = gql`
  mutation CreatePost($title:String!, $body:String!) {
    createPost(title: $title, body: $body) {
      id
      title
      body
    }
  }
`;

const UPDATE_POST = gql`
  mutation CreatePost($title:String!, $body:String!) {
    createPost(title: $title, body: $body) {
      id
      title
      body
    }
  }
`;

function PostAddUpdate() {
  let title;
  let body;
  return (
    <div className="card text-left mb-3">
      <div className="card-body">
        <Mutation mutation={CREATE_POST}>
          {(addPost, {data, loading, error}) => {
            if (loading) return <div>Loading...</div>;
            if (error) return <div>Error! {error.message}</div>;
            return (
              <div className="col-12">
                <form onSubmit={(e) => {
                  e.preventDefault();
                  console.log(e, title.value, body.value)
                  addPost({ variables: { title: title.value, body:body.value } })
                }}>
                  <div className="form-group">
                    <label htmlFor="title">
                      Title
                    </label>
                    <input
                      type="text"
                      className="form-control"
                      id="title"
                      aria-describedby="title"
                      placeholder="Enter title"
                      ref={node=>title=node}
                    />
                  </div>
                  <div className="form-group">
                    <label htmlFor="content">
                      Content
                    </label>
                    <textarea 
                      className="form-control" 
                      id="content" 
                      placeholder="content" 
                      ref={node=>body=node} />
                  </div>
                  <button type="submit" className="btn btn-primary">
                      Submit
                  </button>
                </form>
              </div>
            )
          }}
        </Mutation>
      </div>
    </div>
  );
}

export default compose(
  graphql(CREATE_POST, {name: 'mutationCreatePost'}),
  graphql(UPDATE_POST, {name: 'mutationUpdatePost'}),
  withHandlers({
    createPost: ({mutationCreatePost}) => ({title, body}) => {
      mutationCreatePost({variables: {title, body}})
        .then((arg1, arg2) => {
          console.log(arg1, arg2);
        })
        .catch(e => {
          console.log('PostAddUpdate Error', e);
        })
    },
    updatePost: ({mutationUpdatePost}) => ({id, title, body}) => {
      mutationUpdatePost({variables: {id, title, body}})
        .then(res => {

        })
        .catch(e => {
          console.log('PostAddUpdate Error', e);
        })
    }
  })
)(PostAddUpdate)
